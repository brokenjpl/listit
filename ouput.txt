[{"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Python and Parallelism or Dask by Matthew Rocklin\n&lt;a href=\"http://k4webcast.mediasite.com/Mediasite/Play/4216268dc28148c89d8b6e4eba1ad6e51d\"&gt;http://k4webcast.mediasite.com/Mediasite/Play/4216268dc28148c89d8b6e4eba1ad6e51d&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Other great talks from this conference could be found here:\n&lt;a href=\"http://gael-varoquaux.info/programming/mloss-2015-wising-up-to-building-open-source-machine-learning.html\"&gt;http://gael-varoquaux.info/programming/mloss-2015-wising-up-to-building-open-source-machine-learning.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Python and Parallelism or Dask by Matthew Rocklin\nhttp://k4webcast.mediasite.com/Mediasite/Play/4216268dc28148c89d8b6e4eba1ad6e51d\n\nOther great talks from this conference could be found here:\nhttp://gael-varoquaux.info/programming/mloss-2015-wising-up-to-building-open-source-machine-learning.html\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "44r5hi", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "bayeslaw", "media": null, "name": "t3_44r5hi", "score": 98, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/44r5hi/fantastic_talk_about_parallelism_in_python/", "locked": false, "hide_score": false, "created": 1454971054.0, "url": "https://www.reddit.com/r/Python/comments/44r5hi/fantastic_talk_about_parallelism_in_python/", "author_flair_text": null, "quarantine": false, "title": "Fantastic talk about parallelism in Python", "created_utc": 1454942254.0, "ups": 98, "upvote_ratio": 0.96, "num_comments": 13, "visited": false, "num_reports": null, "distinguished": null}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "czsov82", "gilded": 0, "archived": false, "report_reasons": null, "author": "bayeslaw", "parent_id": "t1_czso274", "score": 1, "approved_by": null, "controversiality": 0, "body": "thanks mate, this looks like a great talk, will watch it later!", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thanks mate, this looks like a great talk, will watch it later!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsov82", "score_hidden": false, "stickied": false, "created": 1454996287.0, "author_flair_text": null, "created_utc": 1454967487.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "saved": false, "id": "czso274", "gilded": 0, "archived": false, "report_reasons": null, "author": "pixelmonkey", "parent_id": "t3_44r5hi", "score": 5, "approved_by": null, "controversiality": 0, "body": "Love the concept behind dask and also really like this talk as an overview of Python parallel computing with the pydata stack.\n\nIf you want an overview of all the other options available for parallel computing with Python, I gave a talk at the last PyData NYC on the subject, \"Beating Python's GIL to Max Out Your CPUs\":\n\nhttps://www.youtube.com/watch?v=gVBLF0ohcrE\n\nThis covers all the options available to speed up Python code, starting with single-CPU speedups using things like Cython, and then going to single-node (but multi-core) speedups with concurrent.futures/multiprocessing/joblib, and finally ending with multi-node (thus massively parallel) architectures such as ipyparallel, pykafka, streamparse, and pyspark.\n\nI would have included dask in this talk, but, at the time (Dec 2015) the dask distributed scheduler was still in very early development. It looks like it has made quite a lot of progress and, based on its documentation, seems to already be a viable alternative to ipyparallel (perhaps even more powerful) for \"pet compute cluster\" parallel computation.", "edited": 1454966936.0, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Love the concept behind dask and also really like this talk as an overview of Python parallel computing with the pydata stack.&lt;/p&gt;\n\n&lt;p&gt;If you want an overview of all the other options available for parallel computing with Python, I gave a talk at the last PyData NYC on the subject, &amp;quot;Beating Python&amp;#39;s GIL to Max Out Your CPUs&amp;quot;:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=gVBLF0ohcrE\"&gt;https://www.youtube.com/watch?v=gVBLF0ohcrE&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This covers all the options available to speed up Python code, starting with single-CPU speedups using things like Cython, and then going to single-node (but multi-core) speedups with concurrent.futures/multiprocessing/joblib, and finally ending with multi-node (thus massively parallel) architectures such as ipyparallel, pykafka, streamparse, and pyspark.&lt;/p&gt;\n\n&lt;p&gt;I would have included dask in this talk, but, at the time (Dec 2015) the dask distributed scheduler was still in very early development. It looks like it has made quite a lot of progress and, based on its documentation, seems to already be a viable alternative to ipyparallel (perhaps even more powerful) for &amp;quot;pet compute cluster&amp;quot; parallel computation.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czso274", "score_hidden": false, "stickied": false, "created": 1454995169.0, "author_flair_text": null, "created_utc": 1454966369.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "czsm63q", "gilded": 0, "archived": false, "report_reasons": null, "author": "This_Is_The_End", "parent_id": "t1_czs8kbz", "score": 2, "approved_by": null, "controversiality": 0, "body": "I believe Guido van Rossum mentioned Dask in a keynote. Just watch all the stuff from pycons. Hehe", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I believe Guido van Rossum mentioned Dask in a keynote. Just watch all the stuff from pycons. Hehe&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsm63q", "score_hidden": false, "stickied": false, "created": 1454992558.0, "author_flair_text": null, "created_utc": 1454963758.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "saved": false, "id": "czs8kbz", "gilded": 0, "archived": false, "report_reasons": null, "author": "kaiserk13", "parent_id": "t3_44r5hi", "score": 2, "approved_by": null, "controversiality": 0, "body": "Oh my, why didn't I know Dask earlier in my life..\nThanks a lot for sharing this!", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh my, why didn&amp;#39;t I know Dask earlier in my life..\nThanks a lot for sharing this!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czs8kbz", "score_hidden": false, "stickied": false, "created": 1454972757.0, "author_flair_text": null, "created_utc": 1454943957.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "czsgv7n", "gilded": 0, "archived": false, "report_reasons": null, "author": "bastibe", "parent_id": "t3_44r5hi", "score": 1, "approved_by": null, "controversiality": 0, "body": "That completely blew my mind! What a cool library!", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That completely blew my mind! What a cool library!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsgv7n", "score_hidden": false, "stickied": false, "created": 1454985184.0, "author_flair_text": null, "created_utc": 1454956384.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": null, "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "czsp5kk", "gilded": 0, "archived": false, "report_reasons": null, "author": "dsijl", "parent_id": "t1_czsnkrz", "score": 1, "approved_by": null, "controversiality": 0, "body": "The latest dask distributed is using cloudpickle", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The latest dask distributed is using cloudpickle&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsp5kk", "score_hidden": false, "stickied": false, "created": 1454996695.0, "author_flair_text": null, "created_utc": 1454967895.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "saved": false, "id": "czsnkrz", "gilded": 0, "archived": false, "report_reasons": null, "author": "RDMXGD", "parent_id": "t1_czsnhmi", "score": 1, "approved_by": null, "controversiality": 0, "body": "My complaint against pickle in this instance isn't security, it's correctness.\n\n", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My complaint against pickle in this instance isn&amp;#39;t security, it&amp;#39;s correctness.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsnkrz", "score_hidden": false, "stickied": false, "created": 1454994494.0, "author_flair_text": null, "created_utc": 1454965694.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "saved": false, "id": "czsnhmi", "gilded": 0, "archived": false, "report_reasons": null, "author": "smurfyn", "parent_id": "t1_czsmawj", "score": 1, "approved_by": null, "controversiality": 0, "body": "Do you have a PoC exploit against dask?", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you have a PoC exploit against dask?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsnhmi", "score_hidden": false, "stickied": false, "created": 1454994377.0, "author_flair_text": null, "created_utc": 1454965577.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "saved": false, "id": "czsmawj", "gilded": 0, "archived": false, "report_reasons": null, "author": "RDMXGD", "parent_id": "t1_czsm8rw", "score": 1, "approved_by": null, "controversiality": 0, "body": "Tornado doesn't integrate well with parallelization solutions most folks really use and, more importantly, dill uses pickle, which is dangerous (correctness issues) and slow and hard to predict.", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Tornado doesn&amp;#39;t integrate well with parallelization solutions most folks really use and, more importantly, dill uses pickle, which is dangerous (correctness issues) and slow and hard to predict.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsmawj", "score_hidden": false, "stickied": false, "created": 1454992741.0, "author_flair_text": null, "created_utc": 1454963941.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "saved": false, "id": "czsm8rw", "gilded": 0, "archived": false, "report_reasons": null, "author": "dsijl", "parent_id": "t1_czslwvn", "score": 1, "approved_by": null, "controversiality": 0, "body": "Whats wrong with Tornado+ dill ?", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Whats wrong with Tornado+ dill ?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsm8rw", "score_hidden": false, "stickied": false, "created": 1454992663.0, "author_flair_text": null, "created_utc": 1454963863.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "saved": false, "id": "czslwvn", "gilded": 0, "archived": false, "report_reasons": null, "author": "RDMXGD", "parent_id": "t3_44r5hi", "score": 1, "approved_by": null, "controversiality": 0, "body": "dask is awesome. Their tornado+dill-based parallelization across hosts is somewhat unfortunate, but it's such a relief they didn't make the common mistake of trying to use the stdlib multiprocessing module, which is broken beyond repair.\n\nLots of cool work on all sorts of stuff by the Continuum folks these days.", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;dask is awesome. Their tornado+dill-based parallelization across hosts is somewhat unfortunate, but it&amp;#39;s such a relief they didn&amp;#39;t make the common mistake of trying to use the stdlib multiprocessing module, which is broken beyond repair.&lt;/p&gt;\n\n&lt;p&gt;Lots of cool work on all sorts of stuff by the Continuum folks these days.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czslwvn", "score_hidden": false, "stickied": false, "created": 1454992209.0, "author_flair_text": null, "created_utc": 1454963409.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "czsosza", "gilded": 0, "archived": false, "report_reasons": null, "author": "howMuchCheeseIs2Much", "parent_id": "t3_44r5hi", "score": 1, "approved_by": null, "controversiality": 0, "body": "When he says Pandas has \"Poor support for nested / semi-structured data\", does anyone know what he means? I'm alway shocked by how easily Pandas handles nesting (you could jam a list of dictionaries of dataframes into a column if you wanted).", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When he says Pandas has &amp;quot;Poor support for nested / semi-structured data&amp;quot;, does anyone know what he means? I&amp;#39;m alway shocked by how easily Pandas handles nesting (you could jam a list of dictionaries of dataframes into a column if you wanted).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsosza", "score_hidden": false, "stickied": false, "created": 1454996199.0, "author_flair_text": null, "created_utc": 1454967399.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "banned_by": null, "removal_reason": null, "link_id": "t3_44r5hi", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "czsov5j", "gilded": 0, "archived": false, "report_reasons": null, "author": "validated1", "parent_id": "t3_44r5hi", "score": 1, "approved_by": null, "controversiality": 0, "body": "amazing!", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;amazing!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_czsov5j", "score_hidden": false, "stickied": false, "created": 1454996284.0, "author_flair_text": null, "created_utc": 1454967484.0, "distinguished": null, "mod_reports": [], "num_reports": null, "ups": 1}}], "after": null, "before": null}}]